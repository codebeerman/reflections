When would you want to use a remote repository rather than keeping all your work local?
	Is a good thing to use a remote repository mainly when we are working with other people.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with
your remote repository?
	Because it would pull changes even made by other people. In the way it works today I can choose
	what commits I want to up-to-date.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Fork is like a clone, but for the GitHub itself. The repository instead of be copied to our machine
	continues on the site's server. When we branch a ramification on the commits. The fork is a better
	option rather than clone in the case that you want to make your own version of some project. Or if
	you want to make changes in the code and don't have permission to push commits there.

What is the benefit of having a copy of the last known state of the remote stored locally?
	Having a local copy of the remote stored we can acces it without a internet connection.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	Without Git and GitHub would be harder go back on the changes made, create versions without compromise
	the main version, or combine the work of mutiple people. The only thing that is easier without these tools
	is that in not necessary to learn how to use Git.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	A separate branch is useful to make changes but maintain the master branch in a wotking state. But it turns the work 
	a little bit more complicated.
